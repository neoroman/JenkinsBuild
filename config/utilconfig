#!/bin/sh
##
HOSTNAME=$(hostname)
CURRENT=$PWD
if [ $USING_SCREENSHOT -eq 1 ]; then
  A2PS="/usr/local/bin/a2ps"
  if [ ! -f "$A2PS" ]; then
    A2PS=$(command -v a2ps)
  fi
  GS="/usr/local/bin/gs"
  if [ ! -f "$GS" ]; then
    GS=$(command -v gs)
  fi
  CONVERT="/usr/local/bin/convert"
  if [ ! -f "$CONVERT" ]; then
    CONVERT=$(command -v convert)
  fi
else
  A2PS=""
  GS=""
  CONVERT=""
fi
if type curl >/dev/null 2>&1; then
  CURL=`which curl`
else
  CURL="/usr/bin/curl"
fi
USING_JSON=1
###################
if test -z "${INPUT_OS}"; then
    ${TOP_DIR}/${SCRIPT_NAME} -h
    exit
fi
if [ $DEBUGGING -eq 1 ]; then
  if test -z $WORKSPACE; then
    if [[ "$INPUT_OS" == "ios" ]]; then
      WORKSPACE=$DEBUG_WORKSPACE_IOS
    elif [[ "$INPUT_OS" == "android" ]]; then
      WORKSPACE=$DEBUG_WORKSPACE_ANDROID
    else
      WORKSPACE="."
    fi
  fi
elif test -z $WORKSPACE; then
  WORKSPACE="."
fi
###################
if test -z $IS_RELEASE; then
  if [ -d ".git" ]; then
    GIT_LAST_TAG=$(cd $WORKSPACE && $GIT describe --tags)
    if [[ $GIT_LAST_TAG == R* ]]; then
      IS_RELEASE=1
      RELEASE_TYPE="release"
    else
      IS_RELEASE=0
      RELEASE_TYPE="develop"
    fi
  fi
fi
###################
FILE_TODAY=$(/bin/date "+%y%m%d")
###################
if [[ "$(uname)" == "Darwin" ]]; then
  ## Homebrew
  if ! command -v brew >/dev/null; then
    echo "Installing Homebrew..."
    /bin/bash -c "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)" || {
      echo "Failed to install Homebrew"; exit 1;
    }
  fi
  BREW=$(command -v brew)

  ## Android Bundle Tool for AAB of Google Play Store
  if [[ "${INPUT_OS:-}" == "android" ]]; then
    if ! command -v bundletool >/dev/null; then
      echo "Installing Bundletool..."
      $BREW install bundletool || { echo "Failed to install Bundletool"; exit 1; }
    fi
    BUNDLE_TOOL=$(command -v bundletool)
    export BUNDLE_TOOL
  fi

  ###################
  ## FVM (Flutter Version Management) Tools for Flutter
  if [[ -n "$FLUTTER_VERSION" ]]; then
    if ! command -v fvm >/dev/null; then
      echo "Installing FVM..."
      $BREW tap leoafarias/fvm
      $BREW install fvm || { echo "Failed to install FVM"; exit 1; }
    fi
    FVM=$(command -v fvm)

    echo "Installing Flutter version $FLUTTER_VERSION..."
    if test -z "$($FVM list | grep -F "$FLUTTER_VERSION")"; then
      $FVM install "$FLUTTER_VERSION" --setup || { echo "Failed to set up Flutter"; exit 1; }
    fi
    yes | $FVM use "$FLUTTER_VERSION" || true
    FlutterBin="$FVM flutter"
    export FlutterBin
  fi
fi