#!/bin/sh
##
cd $APP_ROOT
SHORT_GIT_LOG="${HTML_TITLE}"
###########
if [ $IS_RELEASE -eq 1 ]; then
    THEME_COLOR="619FFA"
    VERSION_STRING="v${APP_VERSION}(${BUILD_VERSION}) "
else
    THEME_COLOR="5DF0D1"
    VERSION_STRING="v${APP_VERSION}.${BUILD_VERSION} "
fi
###########
DEFAULT_LANG_PATH="${APP_ROOT_PREFIX}/${TOP_PATH}/lang"
DEFAULT_LANG_JSON="${DEFAULT_LANG_PATH}/default.json"
if [ ! -f $DEFAULT_LANG_JSON ]; then
    SRC_DEFAULT_LANG_JSON="${APP_ROOT_PREFIX}/${TOP_PATH}/src/lang/default.json"
    if [ -f $SRC_DEFAULT_LANG_JSON ]; then
        cp $SRC_DEFAULT_LANG_JSON $DEFAULT_LANG_JSON
    fi
fi
if [ $CUSTOM_LANG -eq 1 ]; then
    lang_file="${CUSTOM_LANG_PATH}" # language file for distribution site
    filename="$(basename $lang_file)"
    fileonly="${filename%%.*}"
    # Extract the language code, handling both 'lang_ko', 'lang_student_ko', 'lang_ko-student', and 'lang_ko_student'
    language=$(echo $fileonly | awk -F'[_-]' '{print $NF}')
    TEMP_JSON=$($JQ '.LANGUAGE = "'$language'"' $DEFAULT_LANG_JSON)
    echo "${TEMP_JSON}" > $DEFAULT_LANG_JSON
    cp $lang_file $DEFAULT_LANG_PATH/lang_${language}.json
else
    language=$(cat $DEFAULT_LANG_JSON | $JQ '.LANGUAGE' | tr -d '"')
    lang_file="${APP_ROOT_PREFIX}/${TOP_PATH}/lang/lang_${language}.json"
    if [ ! -f $lang_file ]; then
        src_lang_file="${APP_ROOT_PREFIX}/${TOP_PATH}/src/lang/lang_${language}.json"
        if [ -f $src_lang_file ]; then
            cp  $src_lang_file  $lang_file
        fi
    fi
fi
if [ -f $lang_file ]; then
    CLIENT_NAME=$(cat $lang_file | $JQ '.client.title' | tr -d '"')
    APP_NAME=$(cat $lang_file | $JQ '.app.name' | tr -d '"')
    CLIENT_TITLE=$(cat $lang_file | $JQ '.title.h2_client' | tr -d '"')
    SITE_URL=$(cat $lang_file | $JQ '.client.short_url' | tr -d '"')
    SITE_ID=$(cat $jsonConfig | $JQ '.users.app.userId' | tr -d '"')
    SITE_PW=$(cat $jsonConfig | $JQ '.users.app.password' | tr -d '"')
    SITE_ID_PW="${SITE_ID}/${SITE_PW}"
    QC_ID=$(cat $jsonConfig | $JQ '.users.qc.userId' | tr -d '"')
    QC_PW=$(cat $jsonConfig | $JQ '.users.qc.password' | tr -d '"')
    QC_ID_PW="${QC_ID}/${QC_PW}"

    # 검증용 => RELEASE_KEYWORD
    RELEASE_KEYWORD=$(cat $lang_file | $JQ '.mail.releaseKeyword' | tr -d '"')
    # 테스트 => DEVELOP_KEYWORD
    DEVELOP_KEYWORD=$(cat $lang_file | $JQ '.mail.developKeyword' | tr -d '"')
else
    CLIENT_NAME="Company Projects"
    APP_NAME="SomeApp"
    CLIENT_TITLE="{고객사} 앱 배포"
    SITE_URL="https://bit.ly/client_site"
    SITE_ID_PW="app/qwer1234"
    QC_ID_PW="qc/insu1234"
    RELEASE_KEYWORD="Release"
    DEVELOP_KEYWORD="Debug"
fi
OTHER_BUILD_ENV=""
if [ $isFlutterEnabled -eq 1 ]; then
    BUILD_COMMAND=$FlutterBin
elif [ $isReactNativeEnabled -eq 1 ]; then
    BUILD_COMMAND="./android/gradlew"
    OTHER_BUILD_ENV="node "$(node --version)
    OTHER_BUILD_ENV="${OTHER_BUILD_ENV}\nnpm v"$(npm --version)
    OTHER_BUILD_ENV="${OTHER_BUILD_ENV}\n"
else
    BUILD_COMMAND="./gradlew"
fi
###########